#!/bin/bash
set -eu

if [ -z "$1" ]; then
  echo "USAGE: $0 <name.tar> [db] [host]"
  echo "SYNOPSIS: Restores a snapshot of the content of a wiki."
  exit 1
fi

tgt=${1}
db=${2:-}
host=${3:-db-master}
temp=`mktemp -d`
dir=`dirname "$0"`
env="$dir/local.env"

. "$env"

if [ -z "$MWDD_DIR" ]; then
  echo "MWDD_DIR not set in $env!"
  exit 2
fi

dddir="$dir/$MWDD_DIR"
if [ ! -d "$dddir" ]; then
  echo "Directory $dddir not found, adjust MWDD_DIR in $env!"
  exit 2
fi

if [ ! -f "$tgt" ]; then
  echo "Target not found: $tgt!"
  exit 2
fi

if [ -z "$temp" ]; then
  # Make sure $temp is set, since we call rm -rf on it later!
  echo "Can't create temporary directory!"
  exit 23
fi

tar -f "$tgt" -C "$temp" -x

if [ -z "$db"]; then
  db=$(<"$temp/database.name")
fi

echo "Restoring $host:$db from $tgt."
echo "All current content of the target wiki will be lost!"
read -p "Type 'yes' to continue: " confirm

if [ "$confirm" == "yes" ]; then
  # Load the database dump. Use exec -T to avoid mangling the SQL by sending it through a TTY.
  sqlargs="--default-character-set=binary --user=root --password=toor --batch --raw --silent"
  ( cd "$dddir"; bunzip2 -c < "$temp/mediawiki.sql.bz2" | docker-compose exec -T "$host" mysql $sqlargs "$db" )

  # Run the updater, to ensure the schema is up to date.
  # Pipe through cat in the end, so we don't terminate because egrep -vi exits with status 1.
  ( cd "$dddir"; docker-compose exec -T "web" php //var/www/mediawiki/maintenance/update.php --quick --wiki "$db" )\
    | egrep -i 'error|exception|warning' | egrep -vi '0 error\(s\)' | cat

  echo "done."
fi

rm -rf "$temp"
